/*
 * generated by Xtext 2.25.0
 */
grammar InternalJsonProject;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.jsonProject.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.jsonProject.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.jsonProject.services.JsonProjectGrammarAccess;

}

@parser::members {

 	private JsonProjectGrammarAccess grammarAccess;

    public InternalJsonProjectParser(TokenStream input, JsonProjectGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "JsonCommands";
   	}

   	@Override
   	protected JsonProjectGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleJsonCommands
entryRuleJsonCommands returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonCommandsRule()); }
	iv_ruleJsonCommands=ruleJsonCommands
	{ $current=$iv_ruleJsonCommands.current; }
	EOF;

// Rule JsonCommands
ruleJsonCommands returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getJsonCommandsAccess().getJsonCommandsJsonCommandParserRuleCall_0());
			}
			lv_jsonCommands_0_0=ruleJsonCommand
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getJsonCommandsRule());
				}
				add(
					$current,
					"jsonCommands",
					lv_jsonCommands_0_0,
					"org.xtext.jsonProject.JsonProject.JsonCommand");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleJsonCommand
entryRuleJsonCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonCommandRule()); }
	iv_ruleJsonCommand=ruleJsonCommand
	{ $current=$iv_ruleJsonCommand.current; }
	EOF;

// Rule JsonCommand
ruleJsonCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonCommandAccess().getInitInitialisationParserRuleCall_0_0());
				}
				lv_init_0_0=ruleInitialisation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonCommandRule());
					}
					set(
						$current,
						"init",
						lv_init_0_0,
						"org.xtext.jsonProject.JsonProject.Initialisation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonCommandAccess().getOperationsOperationParserRuleCall_1_0());
				}
				lv_operations_1_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonCommandRule());
					}
					add(
						$current,
						"operations",
						lv_operations_1_0,
						"org.xtext.jsonProject.JsonProject.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonCommandAccess().getFinalFinalParserRuleCall_2_0());
				}
				lv_final_2_0=ruleFinal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonCommandRule());
					}
					set(
						$current,
						"final",
						lv_final_2_0,
						"org.xtext.jsonProject.JsonProject.Final");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitialisation
entryRuleInitialisation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialisationRule()); }
	iv_ruleInitialisation=ruleInitialisation
	{ $current=$iv_ruleInitialisation.current; }
	EOF;

// Rule Initialisation
ruleInitialisation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='load'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialisationAccess().getLoadKeyword_0());
		}
		(
			(
				lv_filePath_1_0=RULE_STRING
				{
					newLeafNode(lv_filePath_1_0, grammarAccess.getInitialisationAccess().getFilePathSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialisationRule());
					}
					setWithLastConsumed(
						$current,
						"filePath",
						lv_filePath_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getInsertParserRuleCall_0());
		}
		this_Insert_0=ruleInsert
		{
			$current = $this_Insert_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getModifyParserRuleCall_1());
		}
		this_Modify_1=ruleModify
		{
			$current = $this_Modify_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getSumParserRuleCall_2());
		}
		this_Sum_2=ruleSum
		{
			$current = $this_Sum_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getRemoveParserRuleCall_3());
		}
		this_Remove_3=ruleRemove
		{
			$current = $this_Remove_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getMultParserRuleCall_4());
		}
		this_Mult_4=ruleMult
		{
			$current = $this_Mult_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getSelectParserRuleCall_5());
		}
		this_Select_5=ruleSelect
		{
			$current = $this_Select_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='insert'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getInsertKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getJsonObjectJsonObjectParserRuleCall_1_0());
				}
				lv_jsonObject_1_0=ruleJsonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"jsonObject",
						lv_jsonObject_1_0,
						"org.xtext.jsonProject.JsonProject.JsonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getPathPathParserRuleCall_2_0());
				}
				lv_path_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"path",
						lv_path_2_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulePath
entryRulePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current; }
	EOF;

// Rule Path
rulePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPathAccess().getPathAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_values_1_0=RULE_ID
					{
						newLeafNode(lv_values_1_0, grammarAccess.getPathAccess().getValuesIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPathRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			this_GOBACK_2=RULE_GOBACK
			{
				newLeafNode(this_GOBACK_2, grammarAccess.getPathAccess().getGOBACKTerminalRuleCall_1_1());
			}
			    |
			this_ROOT_3=RULE_ROOT
			{
				newLeafNode(this_ROOT_3, grammarAccess.getPathAccess().getROOTTerminalRuleCall_1_2());
			}
		)
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getPathAccess().getFullStopKeyword_2_0());
			}
			(
				(
					(
						lv_values_5_0=RULE_ID
						{
							newLeafNode(lv_values_5_0, grammarAccess.getPathAccess().getValuesIDTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPathRule());
							}
							addWithLastConsumed(
								$current,
								"values",
								lv_values_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				    |
				this_GOBACK_6=RULE_GOBACK
				{
					newLeafNode(this_GOBACK_6, grammarAccess.getPathAccess().getGOBACKTerminalRuleCall_2_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleModify
entryRuleModify returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifyRule()); }
	iv_ruleModify=ruleModify
	{ $current=$iv_ruleModify.current; }
	EOF;

// Rule Modify
ruleModify returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='modify'
		{
			newLeafNode(otherlv_0, grammarAccess.getModifyAccess().getModifyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getPathPathParserRuleCall_1_0());
				}
				lv_path_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getJsonObjectJsonObjectParserRuleCall_2_0());
				}
				lv_jsonObject_2_0=ruleJsonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					set(
						$current,
						"jsonObject",
						lv_jsonObject_2_0,
						"org.xtext.jsonProject.JsonProject.JsonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSum
entryRuleSum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumRule()); }
	iv_ruleSum=ruleSum
	{ $current=$iv_ruleSum.current; }
	EOF;

// Rule Sum
ruleSum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sum'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumAccess().getSumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSumAccess().getPathTOStorePathParserRuleCall_1_0());
				}
				lv_pathTOStore_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumRule());
					}
					set(
						$current,
						"pathTOStore",
						lv_pathTOStore_1_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSumAccess().getPathToAddPathParserRuleCall_2_0());
				}
				lv_pathToAdd_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumRule());
					}
					set(
						$current,
						"pathToAdd",
						lv_pathToAdd_2_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRemoveAccess().getRemoveAction_0(),
					$current);
			}
		)
		otherlv_1='remove'
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveAccess().getRemoveKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getPathPathParserRuleCall_2_0());
				}
				lv_path_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					set(
						$current,
						"path",
						lv_path_2_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMult
entryRuleMult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultRule()); }
	iv_ruleMult=ruleMult
	{ $current=$iv_ruleMult.current; }
	EOF;

// Rule Mult
ruleMult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mult'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultAccess().getMultKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getPathTOStorePathParserRuleCall_1_0());
				}
				lv_pathTOStore_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					set(
						$current,
						"pathTOStore",
						lv_pathTOStore_1_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getPathToMultPathParserRuleCall_2_0());
				}
				lv_pathToMult_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					set(
						$current,
						"pathToMult",
						lv_pathToMult_2_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getSelectKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectAccess().getPathPathParserRuleCall_1_0());
				}
				lv_path_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFinal
entryRuleFinal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinalRule()); }
	iv_ruleFinal=ruleFinal
	{ $current=$iv_ruleFinal.current; }
	EOF;

// Rule Final
ruleFinal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFinalAccess().getPrintParserRuleCall_0());
		}
		this_Print_0=rulePrint
		{
			$current = $this_Print_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFinalAccess().getStoreParserRuleCall_1());
		}
		this_Store_1=ruleStore
		{
			$current = $this_Store_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getPathPathParserRuleCall_1_0());
				}
				lv_path_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_filePath_2_0=RULE_STRING
				{
					newLeafNode(lv_filePath_2_0, grammarAccess.getStoreAccess().getFilePathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"filePath",
						lv_filePath_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrintAccess().getPrintAction_0(),
					$current);
			}
		)
		otherlv_1='print'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintAccess().getPrintKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintAccess().getPathPathParserRuleCall_2_0());
				}
				lv_path_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintRule());
					}
					set(
						$current,
						"path",
						lv_path_2_0,
						"org.xtext.jsonProject.JsonProject.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleJsonObject
entryRuleJsonObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonObjectRule()); }
	iv_ruleJsonObject=ruleJsonObject
	{ $current=$iv_ruleJsonObject.current; }
	EOF;

// Rule JsonObject
ruleJsonObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJsonObjectAccess().getJsonEntriesParserRuleCall_0());
		}
		this_JsonEntries_0=ruleJsonEntries
		{
			$current = $this_JsonEntries_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJsonObjectAccess().getJsonPrimitiveParserRuleCall_1());
		}
		this_JsonPrimitive_1=ruleJsonPrimitive
		{
			$current = $this_JsonPrimitive_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJsonPrimitive
entryRuleJsonPrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonPrimitiveRule()); }
	iv_ruleJsonPrimitive=ruleJsonPrimitive
	{ $current=$iv_ruleJsonPrimitive.current; }
	EOF;

// Rule JsonPrimitive
ruleJsonPrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJsonPrimitiveAccess().getStringObjectParserRuleCall_0());
		}
		this_StringObject_0=ruleStringObject
		{
			$current = $this_StringObject_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJsonPrimitiveAccess().getBooleanObjectParserRuleCall_1());
		}
		this_BooleanObject_1=ruleBooleanObject
		{
			$current = $this_BooleanObject_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getJsonPrimitiveAccess().getJsonPrimitiveAction_2_0(),
						$current);
				}
			)
			this_NULL_3=RULE_NULL
			{
				newLeafNode(this_NULL_3, grammarAccess.getJsonPrimitiveAccess().getNULLTerminalRuleCall_2_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getJsonPrimitiveAccess().getArrayObjectParserRuleCall_3());
		}
		this_ArrayObject_4=ruleArrayObject
		{
			$current = $this_ArrayObject_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getJsonPrimitiveAccess().getJsonPrimitiveAction_4_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getJsonPrimitiveAccess().getNumberObjectParserRuleCall_4_1());
			}
			ruleNumberObject
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumberObject
entryRuleNumberObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumberObjectRule()); }
	iv_ruleNumberObject=ruleNumberObject
	{ $current=$iv_ruleNumberObject.current.getText(); }
	EOF;

// Rule NumberObject
ruleNumberObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getNumberObjectAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_DOUBLE_1=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_1);
		}
		{
			newLeafNode(this_DOUBLE_1, grammarAccess.getNumberObjectAccess().getDOUBLETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleArrayObject
entryRuleArrayObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayObjectRule()); }
	iv_ruleArrayObject=ruleArrayObject
	{ $current=$iv_ruleArrayObject.current; }
	EOF;

// Rule ArrayObject
ruleArrayObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayObjectAccess().getArrayObjectAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayObjectAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayObjectAccess().getValuesJsonObjectParserRuleCall_2_0_0());
					}
					lv_values_2_0=ruleJsonObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayObjectRule());
						}
						add(
							$current,
							"values",
							lv_values_2_0,
							"org.xtext.jsonProject.JsonProject.JsonObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArrayObjectAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayObjectAccess().getValuesJsonObjectParserRuleCall_2_1_1_0());
						}
						lv_values_4_0=ruleJsonObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayObjectRule());
							}
							add(
								$current,
								"values",
								lv_values_4_0,
								"org.xtext.jsonProject.JsonProject.JsonObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayObjectAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBooleanObject
entryRuleBooleanObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanObjectRule()); }
	iv_ruleBooleanObject=ruleBooleanObject
	{ $current=$iv_ruleBooleanObject.current; }
	EOF;

// Rule BooleanObject
ruleBooleanObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanObjectAccess().getValueBooleanEnumRuleCall_0());
			}
			lv_value_0_0=ruleBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanObjectRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.jsonProject.JsonProject.Boolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringObject
entryRuleStringObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringObjectRule()); }
	iv_ruleStringObject=ruleStringObject
	{ $current=$iv_ruleStringObject.current; }
	EOF;

// Rule StringObject
ruleStringObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringObjectAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringObjectRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleJsonEntries
entryRuleJsonEntries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonEntriesRule()); }
	iv_ruleJsonEntries=ruleJsonEntries
	{ $current=$iv_ruleJsonEntries.current; }
	EOF;

// Rule JsonEntries
ruleJsonEntries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonEntriesAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonEntriesAccess().getListEntriesJsonEntryParserRuleCall_1_0());
				}
				lv_listEntries_1_0=ruleJsonEntry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonEntriesRule());
					}
					add(
						$current,
						"listEntries",
						lv_listEntries_1_0,
						"org.xtext.jsonProject.JsonProject.JsonEntry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getJsonEntriesAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJsonEntriesAccess().getListEntriesJsonEntryParserRuleCall_2_1_0());
					}
					lv_listEntries_3_0=ruleJsonEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJsonEntriesRule());
						}
						add(
							$current,
							"listEntries",
							lv_listEntries_3_0,
							"org.xtext.jsonProject.JsonProject.JsonEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getJsonEntriesAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleJsonEntry
entryRuleJsonEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonEntryRule()); }
	iv_ruleJsonEntry=ruleJsonEntry
	{ $current=$iv_ruleJsonEntry.current; }
	EOF;

// Rule JsonEntry
ruleJsonEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonEntryAccess().getQuotationMarkKeyword_0());
		}
		(
			(
				lv_key_1_0=RULE_ID
				{
					newLeafNode(lv_key_1_0, grammarAccess.getJsonEntryAccess().getKeyIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonEntryRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='"'
		{
			newLeafNode(otherlv_2, grammarAccess.getJsonEntryAccess().getQuotationMarkKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getJsonEntryAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonEntryAccess().getJsonObjectJsonObjectParserRuleCall_4_0());
				}
				lv_jsonObject_4_0=ruleJsonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonEntryRule());
					}
					set(
						$current,
						"jsonObject",
						lv_jsonObject_4_0,
						"org.xtext.jsonProject.JsonProject.JsonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule Boolean
ruleBoolean returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='true'
			{
				$current = grammarAccess.getBooleanAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanAccess().getTRUEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='false'
			{
				$current = grammarAccess.getBooleanAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanAccess().getFALSEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_GOBACK : '?';

RULE_ROOT : '$';

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_NULL : 'null';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
